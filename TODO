commands to make:
 - l-commit: 'record' has been written as a primitive to record a new patch.
   ensures nick in loom, record tree into loom branch for nick, commit into the
   branch of the nick in the loom and pull that onto the tree, with
   --overwrite.
 - push - pushes loom, checks for loom tip correctness.
 - eject - remove a entry from the loom, and merge it out of the next one up.
 - unloomify - remove the loom branch reference.

teach launchpad about looms.
this fixes the first-push-problem of new branches with bzr for package management because it means one loom per package, not one branch per change.

Create a 'bzr help loom' command to give a good overview.

'bzr check' on a loom branch should check the loom is consistent with the branch.

rename threads to 'warps' - the threads held under tension by the loom.
Modelled on a ground loom with the supports to the left and right - old and new
- of the weaver.


possibly: override the nick property on the loom to do a push/pop etc as needed.

teach up-thread to use '<<< THREADNAME' rather than '<<< MERGE-SOURCE'

up-thread should not add a merge when the current thread is already merged.

cut-warp ? eject - whatever - should refuse to eject the last one, or perhaps
should unloom at that point.

push/branch should not set an explicit nick if there are no threads in the loom

normal branch.pull (loom) gets current warp. (default contract ensures this)
loom.pull(normal branch) pulls into current warp. (default contract ensures this)
loom.pull(loom) starts at the lowest warp and pulls matching warps until
a conflict occurs. Optimised by pulling the union of:
 * current rh-tip and thread rev ids.

LoomTreeDecorator has too much UI code - it raises the wrong exceptions and
does note calls.

- make merge do something sane...
        XXX: Currently we do not handle any
        new warps in the source: they are skipped over
        deleted warps in this loom: they are treated as new warps in the source
        renamed warps: threated as new warps in the source.
        deleted warps in the source: they remain in this loom, though the
        content removals in the remote loom which have been propogated are
        propogated here.
- do merge of a loom logic.
- teach uncommit to uncommit the loom *IF appropriate*.
- make pull and push print something sensible rather than revisions pushed.
  - perhaps a 'change descrption' object that the pull method can return.
- make pull BRANCH#warp work to grab one element of a warp. 
  In a warp this should attempt to pull the lower warp elements first?, then 
  just pull the warp into this warp. A reason to grab the lower warp
  elements is to preserve the right delta between the lower warp elements. A
  reason not to, is that the 3-way merge will do the right thing anyway, and
  there is no need to require my warp to have all the subcomponents of yours
  when I just want the resulting patch as a component of my warp. If your 
  baseline warp is ahead of mine, I'll just get no-op updates.
